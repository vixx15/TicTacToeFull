#pragma version 8
intcblock 0 1 511 448 292 146 273
bytecblock 0x67616d655f737461747573 0x706c617965725f6f5f7374617465 0x706c617965725f785f7374617465 0x 0x706c617965725f6f5f696e646578 0x6265745f616d6f756e74 0x626f6172645f7374617465 0x151f7c75
txn NumAppArgs
intc_0 // 0
==
bnz main_l8
txna ApplicationArgs 0
pushbytes 0x02bece11 // "hello(string)string"
==
bnz main_l7
txna ApplicationArgs 0
pushbytes 0x8ec45c22 // "play_action_logic(uint64)string"
==
bnz main_l6
txna ApplicationArgs 0
pushbytes 0x7b3e7130 // "money_refund_logic()void"
==
bnz main_l5
err
main_l5:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub moneyrefundlogiccaster_11
intc_1 // 1
return
main_l6:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub playactionlogiccaster_10
intc_1 // 1
return
main_l7:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub hellocaster_9
intc_1 // 1
return
main_l8:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l12
txn OnCompletion
intc_1 // OptIn
==
bnz main_l11
err
main_l11:
txn ApplicationID
intc_0 // 0
!=
assert
callsub optin_2
intc_1 // 1
return
main_l12:
txn ApplicationID
intc_0 // 0
==
assert
callsub create_1
intc_1 // 1
return

// hello
hello_0:
proto 1 1
bytec_3 // ""
pushbytes 0x48656c6c6f2c20 // "Hello, "
frame_dig -1
extract 2 0
concat
frame_bury 0
frame_dig 0
len
itob
extract 6 0
frame_dig 0
concat
frame_bury 0
retsub

// create
create_1:
proto 0 0
bytec 5 // "bet_amount"
pushint 1000000 // 1000000
app_global_put
bytec 6 // "board_state"
bytec_3 // ""
app_global_put
bytec_0 // "game_status"
intc_0 // 0
app_global_put
bytec 4 // "player_o_index"
intc_0 // 0
app_global_put
bytec_1 // "player_o_state"
intc_0 // 0
app_global_put
bytec_2 // "player_x_state"
intc_0 // 0
app_global_put
retsub

// opt_in
optin_2:
proto 0 0
intc_1 // 1
return

// has_player_won
hasplayerwon_3:
proto 1 1
frame_dig -1
intc_3 // 448
&
intc_3 // 448
==
frame_dig -1
pushint 56 // 56
&
pushint 56 // 56
==
||
frame_dig -1
pushint 7 // 7
&
pushint 7 // 7
==
||
frame_dig -1
intc 4 // 292
&
intc 4 // 292
==
||
frame_dig -1
intc 5 // 146
&
intc 5 // 146
==
||
frame_dig -1
pushint 73 // 73
&
pushint 73 // 73
==
||
frame_dig -1
intc 6 // 273
&
intc 6 // 273
==
||
frame_dig -1
pushint 84 // 84
&
pushint 84 // 84
==
||
bnz hasplayerwon_3_l2
intc_0 // 0
b hasplayerwon_3_l3
hasplayerwon_3_l2:
intc_1 // 1
hasplayerwon_3_l3:
retsub

// is_tie
istie_4:
proto 0 1
bytec_0 // "game_status"
app_global_get
intc_0 // 0
==
bnz istie_4_l2
intc_0 // 0
b istie_4_l3
istie_4_l2:
intc_2 // 511
bytec_2 // "player_x_state"
app_global_get
bytec_1 // "player_o_state"
app_global_get
|
==
istie_4_l3:
retsub

// available_positions
availablepositions_5:
proto 2 1
frame_dig -2
frame_dig -1
|
intc_2 // 511
&
intc_2 // 511
^
retsub

// select_position_for_o
selectpositionforo_6:
proto 1 1
intc_0 // 0
store 0
selectpositionforo_6_l1:
load 0
pushint 9 // 9
<
bz selectpositionforo_6_l5
frame_dig -1
load 0
getbit
intc_1 // 1
==
bnz selectpositionforo_6_l4
load 0
intc_1 // 1
+
store 0
b selectpositionforo_6_l1
selectpositionforo_6_l4:
bytec 4 // "player_o_index"
load 0
app_global_put
selectpositionforo_6_l5:
bytec 4 // "player_o_index"
app_global_get
retsub

// play_action_logic
playactionlogic_7:
proto 1 1
bytec_3 // ""
frame_dig -1
intc_0 // 0
>=
assert
frame_dig -1
pushint 8 // 8
<=
assert
bytec_0 // "game_status"
app_global_get
intc_0 // 0
==
assert
bytec_2 // "player_x_state"
app_global_get
intc_1 // 1
frame_dig -1
shl
&
intc_0 // 0
==
bytec_1 // "player_o_state"
app_global_get
intc_1 // 1
frame_dig -1
shl
&
intc_0 // 0
==
&&
assert
bytec_2 // "player_x_state"
bytec_2 // "player_x_state"
app_global_get
intc_1 // 1
frame_dig -1
shl
|
app_global_put
bytec_2 // "player_x_state"
app_global_get
callsub hasplayerwon_3
bnz playactionlogic_7_l15
playactionlogic_7_l1:
callsub istie_4
bnz playactionlogic_7_l14
bytec_0 // "game_status"
app_global_get
intc_0 // 0
==
bnz playactionlogic_7_l12
playactionlogic_7_l3:
bytec_0 // "game_status"
app_global_get
intc_0 // 0
==
bnz playactionlogic_7_l11
bytec_0 // "game_status"
app_global_get
intc_1 // 1
==
bnz playactionlogic_7_l10
bytec_0 // "game_status"
app_global_get
pushint 2 // 2
==
bnz playactionlogic_7_l9
bytec_0 // "game_status"
app_global_get
pushint 3 // 3
==
bnz playactionlogic_7_l8
err
playactionlogic_7_l8:
pushbytes 0x0009497473206120746965 // 0x0009497473206120746965
frame_bury 0
b playactionlogic_7_l16
playactionlogic_7_l9:
pushbytes 0x0017596f752068617665206c6f7374207468652067616d6521 // 0x0017596f752068617665206c6f7374207468652067616d6521
frame_bury 0
b playactionlogic_7_l16
playactionlogic_7_l10:
pushbytes 0x0023596f752068617665207375636363657366756c6c7920776f6e207468652067616d6521 // 0x0023596f752068617665207375636363657366756c6c7920776f6e207468652067616d6521
frame_bury 0
b playactionlogic_7_l16
playactionlogic_7_l11:
bytec 6 // "board_state"
app_global_get
frame_bury 0
frame_dig 0
len
itob
extract 6 0
frame_dig 0
concat
frame_bury 0
b playactionlogic_7_l16
playactionlogic_7_l12:
bytec_1 // "player_o_state"
bytec_1 // "player_o_state"
app_global_get
intc_1 // 1
bytec_2 // "player_x_state"
app_global_get
bytec_1 // "player_o_state"
app_global_get
callsub availablepositions_5
callsub selectpositionforo_6
shl
|
app_global_put
bytec_1 // "player_o_state"
app_global_get
callsub hasplayerwon_3
bz playactionlogic_7_l3
bytec_0 // "game_status"
pushint 2 // 2
app_global_put
b playactionlogic_7_l3
playactionlogic_7_l14:
bytec_0 // "game_status"
pushint 3 // 3
app_global_put
b playactionlogic_7_l3
playactionlogic_7_l15:
bytec_0 // "game_status"
intc_1 // 1
app_global_put
b playactionlogic_7_l1
playactionlogic_7_l16:
retsub

// money_refund_logic
moneyrefundlogic_8:
proto 0 0
bytec_0 // "game_status"
app_global_get
intc_1 // 1
==
assert
itxn_begin
intc_1 // pay
itxn_field TypeEnum
txn Sender
itxn_field Receiver
bytec 5 // "bet_amount"
app_global_get
itxn_field Amount
itxn_submit
intc_1 // 1
return

// hello_caster
hellocaster_9:
proto 0 0
bytec_3 // ""
dup
txna ApplicationArgs 1
frame_bury 1
frame_dig 1
callsub hello_0
frame_bury 0
bytec 7 // 0x151f7c75
frame_dig 0
concat
log
retsub

// play_action_logic_caster
playactionlogiccaster_10:
proto 0 0
bytec_3 // ""
intc_0 // 0
txna ApplicationArgs 1
btoi
frame_bury 1
frame_dig 1
callsub playactionlogic_7
frame_bury 0
bytec 7 // 0x151f7c75
frame_dig 0
concat
log
retsub

// money_refund_logic_caster
moneyrefundlogiccaster_11:
proto 0 0
callsub moneyrefundlogic_8
retsub